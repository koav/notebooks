// This file was auto-generated by ML.NET Model Builder. 

using System;
using TelecomML.Model;

namespace TelecomML.ConsoleApp
{
    class Program
    {
        static void Main(string[] args)
        {
            // Create single instance of sample data from first line of dataset for model input
            ModelInput sampleData = new ModelInput()
            {
                State = @"KS",
                Account_length = 128F,
                Area_code = 415F,
                International_plan = 0F,
                Voice_mail_plan = 1F,
                Number_vmail_messages = 25F,
                Total_day_minutes = 265.1F,
                Total_day_calls = 110F,
                Total_day_charge = 45.07F,
                Total_eve_minutes = 197.4F,
                Total_eve_calls = 99F,
                Total_eve_charge = 16.78F,
                Total_night_minutes = 244.7F,
                Total_night_calls = 91F,
                Total_night_charge = 11.01F,
                Total_intl_minutes = 10F,
                Total_intl_calls = 3F,
                Total_intl_charge = 2.7F,
                Customer_service_calls = 1F,
            };

            // Make a single prediction on the sample data and print results
            var predictionResult = ConsumeModel.Predict(sampleData);

            Console.WriteLine("Using model to make single prediction -- Comparing actual Churn with predicted Churn from sample data...\n\n");
            Console.WriteLine($"State: {sampleData.State}");
            Console.WriteLine($"Account_length: {sampleData.Account_length}");
            Console.WriteLine($"Area_code: {sampleData.Area_code}");
            Console.WriteLine($"International_plan: {sampleData.International_plan}");
            Console.WriteLine($"Voice_mail_plan: {sampleData.Voice_mail_plan}");
            Console.WriteLine($"Number_vmail_messages: {sampleData.Number_vmail_messages}");    
            Console.WriteLine($"Total_day_minutes: {sampleData.Total_day_minutes}");
            Console.WriteLine($"Total_day_calls: {sampleData.Total_day_calls}");
            Console.WriteLine($"Total_day_charge: {sampleData.Total_day_charge}");
            Console.WriteLine($"Total_eve_minutes: {sampleData.Total_eve_minutes}");
            Console.WriteLine($"Total_eve_calls: {sampleData.Total_eve_calls}");
            Console.WriteLine($"Total_eve_charge: {sampleData.Total_eve_charge}");
            Console.WriteLine($"Total_night_minutes: {sampleData.Total_night_minutes}");
            Console.WriteLine($"Total_night_calls: {sampleData.Total_night_calls}");
            Console.WriteLine($"Total_night_charge: {sampleData.Total_night_charge}");
            Console.WriteLine($"Total_intl_minutes: {sampleData.Total_intl_minutes}");
            Console.WriteLine($"Total_intl_calls: {sampleData.Total_intl_calls}");
            Console.WriteLine($"Total_intl_charge: {sampleData.Total_intl_charge}");
            Console.WriteLine($"Customer_service_calls: {sampleData.Customer_service_calls}");
            Console.WriteLine($"\n\nPredicted Churn value {predictionResult.Prediction} \nPredicted Churn scores: [{String.Join(",", predictionResult.Score)}]\n\n");
            Console.WriteLine("=============== End of process, hit any key to finish ===============");
            Console.ReadKey();
        }
    }
}
